@page "/mtgsets"
@using MtgDatabase
@using System
@using MtgDatabase.Models
@inject MtgInventoryService InventoryService
@inject IMkmMapper MkmMapper

<p>
    MY SETS<br/> TODO: Summary
    <br/>
</p>

<p>
    <div class="row">
        <RadzenGrid AllowFiltering="true"
                    FilterCaseSensitivity="FilterCaseSensitivity.CaseInsensitive"
                    FilterMode="FilterMode.Advanced"
                    AllowPaging="false" PageSize="100"
                    AllowSorting="true" Data="@_setData" TItem="SetInfo">
            <Columns>
                <RadzenGridColumn TItem="SetInfo" Property="Code" Title="Actions" Sortable="false" Filterable="false" Width="350px">
                    <Template Context="data">
                        <div class="row">
                            <div class="col-md-6">
                                <RadzenButton Click=@(args => OnRebuildCards(@data)) Text="Rebuild" ButtonStyle="ButtonStyle.Light"/>
                            </div>
                            <div class="col-md-6">
                                <RadzenButton Click=@(args => OnDownloadAndRebuildCards(@data)) Text="Download" ButtonStyle="ButtonStyle.Light"/>
                            </div>
                        </div>
                    </Template>
                </RadzenGridColumn>

                <RadzenGridColumn TItem="SetInfo" Property="Code" Title="Code"/>
                <RadzenGridColumn TItem="SetInfo" Property="ParentSetCode" Title="ParentSetCode"/>
                <RadzenGridColumn TItem="SetInfo" Property="Name" Title="Name" Width="250"/>
                <RadzenGridColumn TItem="SetInfo" Property="ReleaseDate" Title="ReleaseDate"/>
                <RadzenGridColumn TItem="SetInfo" Property="IsDigital" Title="IsDigital"/>
                <RadzenGridColumn TItem="SetInfo" Property="CardCount" Title="CardCount"/>
                <RadzenGridColumn TItem="SetInfo" Property="SetType" Title="SetType"/>
                <RadzenGridColumn TItem="SetInfo" Property="UpdateDateUtc" Title="Updated"/>
            </Columns>
        </RadzenGrid>
    </div>
</p>


@code
{

    void OnRebuildSetData()
    {
    }

    async void OnRebuildCards(SetInfo set)
    {
        await InventoryService.RebuildSetDataAsync(set);
    }

    async void OnDownloadAndRebuildCards(SetInfo set)
    {
        await InventoryService.DownloadRebuildSetDataAsync(set);
    }


    private SetInfo[] _setData = Array.Empty<SetInfo>();

    protected override void OnInitialized()
    {
        _setData = InventoryService.GetAllSets();
    }


    void OnChange(object value, string name)
    {
    // if ("SetFilter".Equals(name))
    // {
    //     _databaseQueryData.SetCode = _setData.FirstOrDefault(s => s.Name == (value?.ToString() ?? ""))?.Code ?? "";
    // }
    // console.Log($"{name} value changed to {value}");
    }
}