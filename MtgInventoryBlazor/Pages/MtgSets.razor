@page "/mtgsets"
@using MtgDatabase
@using System
@using MtgDatabase.Models
@inject MtgInventoryService InventoryService
@inject IMkmMapper MkmMapper



    <MudTable Items="@_setData" Hover="true" Breakpoint="Breakpoint.Sm" FixedHeader="true" Height="@(fixed_header?"800px":"")">
        <HeaderContent>
            <MudTh>Code</MudTh>
            <MudTh>Parent SetCode</MudTh>
            <MudTh>Name</MudTh>
            <MudTh>ReleaseDate</MudTh>
            <MudTh>IsDigital</MudTh>
            <MudTh>CardCount</MudTh>
            <MudTh>SetType</MudTh>
        </HeaderContent>
        <RowTemplate>
            <MudTd DataLabel="Code">@context.Code</MudTd>
            <MudTd DataLabel="Parent Set Code">@context.ParentSetCode</MudTd>
            <MudTd DataLabel="Name">@context.Name</MudTd>
            <MudTd DataLabel="ReleaseDate">@context.ReleaseDate</MudTd>
            <MudTd DataLabel="IsDigital">@context.IsDigital</MudTd>
            <MudTd DataLabel="CardCount">@context.CardCount</MudTd>
            <MudTd DataLabel="SetType">@context.SetType</MudTd>
        </RowTemplate>
    </MudTable>



@code
{
    bool fixed_header = true;
    private SetInfo[] _setData = Array.Empty<SetInfo>();

    protected override void OnInitialized()
    {
        _setData = InventoryService.GetAllSets();
    }

    void OnChange(object value, string name)
    {
    // if ("SetFilter".Equals(name))
    // {
    //     _databaseQueryData.SetCode = _setData.FirstOrDefault(s => s.Name == (value?.ToString() ?? ""))?.Code ?? "";
    // }
    // console.Log($"{name} value changed to {value}");
    }
}