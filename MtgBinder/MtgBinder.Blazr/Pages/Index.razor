@page "/"

@using MtgBinder.Blazr.Data
@using MtgBinder.Blazr.Data.CardLookup
@using MtgBinder.Domain.Database
@using MatBlazor

@inject CardLookupService LookupService

<h1>Lookup stuff</h1>

<p>Lookup cards</p>
<EditForm Model="@_cardLookupData" OnValidSubmit="OnSubmitLookup">
    <DataAnnotationsValidator />
    <p>
        <label>Card:</label>
        <MatTextField id="lookup" @bind-Value="_cardLookupData.Lookup" Label="Card" />
    </p>
    <p><MatButton>Search!</MatButton></p>
</EditForm>

<p>This component demonstrates fetching data from a service.</p>

@if (!_lookupResult.Cards.Any())
{
    <p><em>No cards yet</em></p>
}
else
{
    <MatTable Items="@_lookupResult.Cards" >
        <MatTableHeader>

            <th>Name</th>
            <th>Set</th>
          
        </MatTableHeader>
        <MatTableRow>
            <td>@context.Name</td>
            <td>@context.SetCode</td>
        </MatTableRow>
    </MatTable>
}

@code {
    private readonly CardLookupData _cardLookupData = new CardLookupData();
    private LookupResult _lookupResult = new LookupResult();

    async void OnSubmitLookup()
    {
        _lookupResult = await LookupService.Lookup(_cardLookupData);
    }

    //protected override async Task OnInitializedAsync()
    //{
    //    forecasts = await ForecastService.GetForecastAsync(DateTime.Now);
    //}
}