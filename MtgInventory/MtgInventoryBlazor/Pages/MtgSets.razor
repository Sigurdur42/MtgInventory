@page "/mtgsets"
@using MtgDatabase
@using MtgDatabase.Models
@using System.Collections.ObjectModel
@inject MtgInventoryService InventoryService
@inject IMkmMapper MkmMapper

<p>
    MY SETS<br/> TODO: Summary
    <br/>
    <RadzenButton Click=@(args => OnRebuildSetData()) Text="Rebuild Set Data" />
</p>

<p>
    <RadzenGrid AllowFiltering="true"
                FilterCaseSensitivity="FilterCaseSensitivity.CaseInsensitive"
                FilterMode="FilterMode.Advanced"
                AllowPaging="false" PageSize="100"
                AllowSorting="true" Data="@_setData" TItem="SetInfo" >
        <Columns>
            <RadzenGridColumn TItem="SetInfo" Property="Code" Title="Actions" Sortable="false" Filterable="false">

                <Template Context="data">
                    <RadzenButton Click=@(args => OnRebuildCards(@data)) Text="Rebuild Cards" ButtonStyle="ButtonStyle.Light" />
                </Template>
            </RadzenGridColumn>
            <RadzenGridColumn TItem="SetInfo" Property="Code" Title="Code"/>
            <RadzenGridColumn TItem="SetInfo" Property="Name" Title="Name"/>

            @* <RadzenGridColumn TItem="Employee" Property="Photo" Title="Photo" Sortable="false" Filterable="false"> *@
            @*     <Template Context="data"> *@
            @*         <RadzenImage Path="@data?.Photo" /> *@
            @*     </Template> *@
            @* </RadzenGridColumn> *@
            @* <RadzenGridColumn TItem="Employee" Property="LastName" Title="Last Name" /> *@
            @* <RadzenGridColumn TItem="Employee" Property="FirstName" Title="First Name" /> *@
            @* <RadzenGridColumn TItem="Employee" Property="Title" Title="Title" /> *@
            @* <RadzenGridColumn TItem="Employee" Property="TitleOfCourtesy" Title="Title Of Courtesy" /> *@
            @* <RadzenGridColumn TItem="Employee" Property="BirthDate" Title="Birth Date"> *@
            @*     <Template Context="data"> *@
            @*         @String.Format("{0:d}", data.BirthDate) *@
            @*     </Template> *@
            @* </RadzenGridColumn> *@
            @* <RadzenGridColumn TItem="Employee" Property="HireDate" Title="Hire Date"> *@
            @*     <Template Context="data"> *@
            @*         @String.Format("{0:d}", data.HireDate) *@
            @*     </Template> *@
            @* </RadzenGridColumn> *@
            @* <RadzenGridColumn TItem="Employee" Property="Address" Title="Address" /> *@
            @* <RadzenGridColumn TItem="Employee" Property="City" Title="City" /> *@
            @* <RadzenGridColumn TItem="Employee" Property="Region" Title="Region" /> *@
            @* <RadzenGridColumn TItem="Employee" Property="PostalCode" Title="Postal Code" /> *@
            @* <RadzenGridColumn TItem="Employee" Property="Country" Title="Country" /> *@
            @* <RadzenGridColumn TItem="Employee" Property="HomePhone" Title="Home Phone" /> *@
            @* <RadzenGridColumn TItem="Employee" Property="Extension" Title="Extension" /> *@
            @* <RadzenGridColumn TItem="Employee" Property="Notes" Title="Notes" /> *@
        </Columns>
    </RadzenGrid>
</p>


@code
{

    void OnRebuildSetData()
    {
    }

    void OnRebuildCards(SetInfo set)
    {
    }

    private async void StartSearchAsync()
    {
    //     var result = await InventoryService.SearchCardsAsync(_databaseQueryData);
    //     _queryResult.Clear();
    //     foreach (var res in result)
    //     {
    //         _queryResult.Add(res);
    //     }
    //
    //     resultCount = result.Length;
    // // _queryResult.AddRange(result);
    //
    //     StateHasChanged();
    }

    private SetInfo[] _setData = Array.Empty<SetInfo>();

    protected override void OnInitialized()
    {
        _setData = InventoryService.GetAllSets();
    }


    void OnChange(object value, string name)
    {
    // if ("SetFilter".Equals(name))
    // {
    //     _databaseQueryData.SetCode = _setData.FirstOrDefault(s => s.Name == (value?.ToString() ?? ""))?.Code ?? "";
    // }
    // console.Log($"{name} value changed to {value}");
    }
}