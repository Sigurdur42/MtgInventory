@page "/"
@using MtgDatabase
@using MtgDatabase.Models
@using System.Collections.ObjectModel
@inject MtgInventoryService InventoryService

Database initialized: @InventoryService.IsDatabaseInitialized
<p>Result count: @resultCount</p>

Welcome to your new app.


<MatButton Raised="true">Raised</MatButton>
<MatButton Unelevated="true">Unelevated</MatButton>
<MatButton Outlined="true">Outlined</MatButton>
<MatButton Dense="true">Dense</MatButton> 

<p>
    <EditForm Model="@_databaseQueryData" OnValidSubmit="@StartSearchAsync">
        <div class="col-12 row">
            <label class="col-2 font-weight-bold">Card Name:</label>
            <InputText class="col-4 form-control" @bind-Value="_databaseQueryData.Name" placeholder="the card name"></InputText>
        </div>
        <div class="col-12 row">
            <label class="col-2 font-weight-bold">Match exact</label>
            <InputCheckbox class="col-4 form-control" @bind-Value="_databaseQueryData.MatchExactName" displayname="Match Exact"></InputCheckbox>
        </div>
        <div class="col-12 row">
            <label class="col-2 font-weight-bold">Token Only</label>
            <InputCheckbox class="col-4 form-control" @bind-Value="_databaseQueryData.IsToken">Token only</InputCheckbox>
        </div>
        <div class="col-12 row">
            <span class="col-2"/>
            <input type="submit" class="form-control col-1 btn-primary" value="Search!"/>
        </div>
    </EditForm>
</p>
<hr/>
<p>
    <p>Result count: @resultCount</p>
    <table class="table" id="searchResult">
        <thead>
        <tr>
            <th>Image</th>
            <th>Name</th>
            <th>Type Line</th>
            <th>Reprints</th>
        </tr>
        </thead>
        <tbody>
        @foreach (var card in _queryResult)
        {
            <tr>
                <td><img src="@card.ReprintInfos?.FirstOrDefault()?.Images?.Normal" width="100">  </td>
                <td>@card.Name</td>
                <td>@card.TypeLine</td>
                <td>@card.ReprintInfos?.Length</td>
            </tr>
        }
        </tbody>
    </table>


</p>


@* <P> *@
@*     <button class="btn btn-danger" @onclick="@(() => InventoryService.Test())">TEST</button> *@
@* </P> *@

@code
{
    private readonly MtgDatabaseQueryData _databaseQueryData = new MtgDatabaseQueryData();

    private int resultCount = 0;

    public ObservableCollection<QueryableMagicCard> _queryResult = new ObservableCollection<QueryableMagicCard>();

    private async void StartSearchAsync()
    {
        var result = await InventoryService.SearchCardsAsync(_databaseQueryData);
        _queryResult.Clear();
        foreach (var res in result)
        {
            _queryResult.Add(res);
        }

        resultCount = result.Length;
    // _queryResult.AddRange(result);

        StateHasChanged();
    }

    private void StartSearch()
    {
        var result = InventoryService.SearchCards(_databaseQueryData);
        _queryResult.Clear();
        foreach (var res in result)
        {
            _queryResult.Add(res);
        }

        resultCount = result.Length;
    // _queryResult.AddRange(result);
    }

}